@import url('https://fonts.googleapis.com/css2?family=Lato:wght@300&display=swap');

:root{
    --main-bg-color:#eff5fe ;
    --container-width:500px;
    --border-color:#0288d147;
}
body,html{
    padding:0;
    margin:0;
    background: #eff5fe;
    height: 100%;
    font-family: system-ui;
    box-sizing: border-box;
    overflow: hidden;
}
body{
    display: flex;
    align-items: center;
    justify-content:center;
    
    

}

.upload-container{
    background:#ffffff;
    border-radius: 25px;
    box-shadow: 0px 20px 20px #0000002e;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    margin:80px;

    

    /* margin-left: 45px; */
    
}

.drop-zone{
    width:var(--container-width);
    min-height: 200px;
    border: 2px dashed #0288d147;
    margin:30px;
    border-radius: 10px;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    transition: all 0.2s ease;
    
}

.dragged.drop-zone{
    background:#eff5fe ;
    border-color:#2196f3;
}

.icon-container{
    width: 75px;
    height: 100px;
    position: relative;
}

.icon-container img{
    width:75px;
    position: absolute;
    /* To rotate the image about bottom
    This would only be applied where we have used transform method and in it rotate */
    transform-origin: bottom;
    transition: transform 0.25s ease-in-out;
    
}

/* Due to position absolute in .icon-container img all the images are one below the other,1st is centre one ,above it is left and above
it is right,so to bring centre images on the top we made its z-index to 2 */

/* We want the animation of left and right should reflect when someone is dragging a file into it so
    we will add a class dragged(which we'll not apply in Html,we'll add it dynamically by JS,and whenver dragged would be insert
    the animation would reflect) */

.icon-container .centre{
    z-index: 2;
}

.dragged .icon-container .left, .icon-container .right{
    
    filter: grayscale(0.5);

}
/* for reducing the size to 90% of the original size scale is set to 0.9 */
.dragged .icon-container .left{
    transform: rotate(-10deg) translate(-20px) scale(0.9);
}
.dragged .icon-container .right{
    transform: rotate(10deg) translate(20px) scale(0.9);
}
.dragged .icon-container .centre{
    transform: translateY(-5px);
}

#fileInput{
    display: none;
}

.browseBtn{
    color: #2196f3;
    cursor: pointer;
}
.progress-container{
    width:var(--container-width);
    height:70px;
    border:2px solid var(--main-bg-color);
    margin-bottom:25px;
    border-radius: 10px;
    display: none;
}

.bg-progress{
    background: var(--main-bg-color);
    /* width is use to fill to show how much is downloaded ,as width will increase the container would fill
    instead of width we can also use width:100% ,transform:scaleX(0.1) transform-origin:left we can increase in the value in scale to
    fill the container */
    width:0%;
    height:100%;
    border-radius: 8px;
    transition: width 0.25s linear;


}
.title{
    padding:10px 15px;
    padding-bottom: 0px;

}
.percent-container{
    font-size: 13px;
    opacity: 0.8;
    position: relative;
}

.progress-bar{
    position: absolute;
    height:3px;
    width: 470px;
    background: #2196f3;
    border-radius: 2px;
    transform-origin:left ; 
    transform: scaleX(0);
    transition: transform 0.25s linear;
}

.sharing-container{
    width: var(--container-width);
    margin-bottom: 20px;
    display: none;
    
}

p{
    opacity: 0.7;
    text-align: center;
}

.sharing-container .input-container{
    position: relative;
}
 .input-container img{
   position: absolute;
   height: 24px;
   width: 30px;
   top: 11.5px;
   right:5px;
   background: #f5fcff;
   
   cursor: pointer;
 }
.sharing-container .input-container input{
    width:93%;
    border: 2px dashed var(--border-color);
    border-radius: 6px;
    outline: none;
    padding: 10px 15px;
    font-size: 20px;
    background: #f5fcff;
    color: #0000008c;
    
}
.email-container{
    display: flex;
    /* align-items: center; */
}
.email-container form{
    width: 100%;
    border: 2px solid var(--border-color);
    border-radius: 10px;
    padding: 15px;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.email-container .filled{
    display: flex;
    /* flex-direction: column; */
    justify-content: space-between;
    margin-bottom: 5px;
    width: 400px;
}
.email-container label{
    font-size: 18px;
}

.email-container input{
    font-size: 18px;
    border: none;
    outline: none;
    border-bottom:2px solid var(--border-color);
    text-align: center;
}
.email-container button{
    font-size: 18px;
    padding: 8px 40px;
    background: var(--main-bg-color);
    border: none;
    border-radius: 5px;
    cursor: pointer;
    margin-top: 15px;
    color: #607d8b;
}

.toast{
    position: absolute;
    left: 50%;
    bottom: 10px;
    font-size: 18px;
    transform: translate(-50%, 105px);
    transition: transform 0.2s ease-in-out;
    padding: 10px 20px;
    border-radius: 2px;
    background: #03a9f4;
    color: #fff;
    box-shadow: 0px 10px 15px -3px rgba(0, 0, 0, 0.1),
                0px 4px 6px,-2px rgba(0, 0, 0, 0.05);
    
}

.upload-vector{
    background: url('./undraw-upload3.svg') no-repeat;
    background-size: contain;
    height:50vh;
    width: 50vw;
    

}


@media screen and (max-width:900px) {
    :root{
        --container-width:320px;
    } 
    body{
        display: flex;
        align-items: center;
        justify-self: center;
    }
    .upload-vector{
        display: none;
    }

    .email-container .filled{
        flex-direction: column;
        width: 300px;
    }


}


